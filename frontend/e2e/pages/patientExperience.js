/* eslint no-unused-expressions: 0 */

function acceptTos() {
  this.expect.section("@app").to.be.visible;
  this.expect
    .section("@app")
    .to.contain.text("I agree");
  this.section.app.expect.element("@tosConsentButton").to.be.visible;
  this.section.app.click("@tosConsentButton");
  return this;
}

function verifyBirthDate(birthDate) {
  this.expect.section("@app").to.be.visible;
  this.expect
    .section("@app")
    .to.contain.text(
      "Enter your date of birth to access your COVID-19 Testing Portal."
    );
  this.section.app.expect.element("@dobInput").to.be.visible;
  this.section.app.setValue("@dobInput", birthDate);
  this.section.app.click("@dobSubmitButton");
  this.expect.section("@app").to.be.visible;
  return this;
}

function updateEmail(email) {
  // No email is generated by Faker, so we can add one here to assert edit flow works
  this.expect.section("@app").to.contain.text("Profile information");
  this.section.app.expect.element("@editPatientButton").to.be.visible;
  this.section.app.click("@editPatientButton");
  this.section.app.expect.element("@emailInput").to.be.visible;
  this.section.app.setValue("@emailInput", email);
  this.section.app.expect.element("@savePatientButton").to.be.visible;
  this.section.app.click("@savePatientButton");
  return this;
}

function verifyEmail(email) {
  this.expect.section("@app").to.contain.text("Profile information");
  this.section.app.expect.element("@patientEmail").to.be.visible;
  this.section.app.expect.element("@patientEmail").to.contain.text(email);
  this.section.app.expect.element("@patientConfirmButton").to.be.visible;
  this.section.app.click("@patientConfirmButton");
  this.expect
    .section("@app")
    .to.contain.text("Are you experiencing any of the following symptoms?");
  return this;
}

function completeQuestionnaire() {
  this.section.app.expect.element("@textDelivery").to.be.visible;
  this.section.app.click("@textDelivery");
  this.section.app.expect.element("@noSymptoms").to.be.visible;
  this.section.app.click("@noSymptoms");
  this.section.app.expect.element("@mostRecent").to.be.visible;
  this.section.app.click("@mostRecent");
  this.section.app.expect.element("@pregnant").to.be.visible;
  this.section.app.click("@pregnant");
  this.section.app.expect.element("@continueButton").to.be.visible;
  this.section.app.click("@continueButton");
}

function viewTestResult() {
  this.expect.section("@app").to.be.visible;
  this.expect.section("@app").to.contain.text("SARS-CoV-2 result");
  this.expect.section("@app").to.contain.text("Test result");
  this.expect.section("@app").to.contain.text("Test date");
  this.expect.section("@app").to.contain.text("Test device");
}

module.exports = {
  url: (url) => url,
  commands: [
    {
      acceptTos,
      verifyBirthDate,
      updateEmail,
      verifyEmail,
      completeQuestionnaire,
      viewTestResult,
    },
  ],
  sections: {
    app: {
      selector: ".App",
      elements: {
        tosConsentButton: "#tos-consent-button",
        dobInput: 'input[name="birthDate"]',
        dobSubmitButton: "#dob-submit-button",
        editPatientButton: "#edit-patient-profile-button",
        emailInput: 'input[name="email"]',
        savePatientButton: "#edit-patient-save-lower",
        textDelivery: 'input[name="testResultDelivery"][value="SMS"]+label',
        noSymptoms: 'input[name="no_symptoms"][value="no"]+label',
        mostRecent: 'input[name="most_recent_flag"][value="yes"]+label',
        pregnant: 'input[name="pregnancy"][value="60001007"]+label',
        continueButton: "#aoe-form-save-button",
        patientEmail: "#patient-email",
        patientConfirmButton: "#patient-confirm-and-continue",
      },
    },
  },
};
